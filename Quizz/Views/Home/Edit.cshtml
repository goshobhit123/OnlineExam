@model Quizz.Models.TBL_QUESTIONS

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutA.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit2","Home",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>TBL_QUESTIONS</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.QUESTION_ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Q_TEXT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Q_TEXT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Q_TEXT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OPA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OPA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OPA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OPB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OPB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OPB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OPC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OPC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OPC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OPD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OPD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OPD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.COP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("COP", ViewBag.L2 as SelectList, "--select--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.COP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Q_level, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Q_level", ViewBag.L1 as SelectList, "--select--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Q_level, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.COP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COP, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Q_level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Q_level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Q_level, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
